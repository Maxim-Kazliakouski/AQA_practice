{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'browser' for <Function test_user_is_on_the_text_box_section>>\n\n    @pytest.fixture(scope='function')\n    def browser(request):\n        browser_name = request.config.getoption('browser.name')\n        headless = request.config.getoption('headmode')\n        print(f'\\nStarting browser {browser_name}...')\n        global browser\n        # user_language = request.config.getoption('language')\n        if browser_name == 'chrome':\n            # here we set in commandline choosing for headless mode\n            if headless == 'true':\n                options = webdriver.ChromeOptions()\n                # adding browser options!!! important\n                options.add_argument(\n                    \"user-data-dir=/Users/max_kazliakouski/Library/Application Support/Google/Chrome/Default\")\n                # prefs = {\"profile.default_content_setting_values.notifications\": 2}\n                # options.add_experimental_option(\"prefs\", prefs)\n                # options.add_argument(\"--disable-notifications\")\n                options.add_argument(\n                    \"user-agent=Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36\")\n                options.headless = True\n                s = Service('Tools/chromedriver')\n>               browser = webdriver.Chrome(service=s, options=options)\n\nTests/tests_ElementsPage/conftest.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv_aqa_practise/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:70: in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\nvenv_aqa_practise/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:90: in __init__\n    self.service.start()\nvenv_aqa_practise/lib/python3.10/site-packages/selenium/webdriver/common/service.py:98: in start\n    self.assert_process_still_running()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x10b377520>\n\n    def assert_process_still_running(self):\n        return_code = self.process.poll()\n        if return_code:\n>           raise WebDriverException(\n                'Service %s unexpectedly exited. Status code was: %s'\n                % (self.path, return_code)\n            )\nE           selenium.common.exceptions.WebDriverException: Message: Service Tools/chromedriver unexpectedly exited. Status code was: -9\n\nvenv_aqa_practise/lib/python3.10/site-packages/selenium/webdriver/common/service.py:110: WebDriverException\n", "test_name": "test_user_is_on_the_text_box_section", "rerun": "0"}}, "suite_name": "Tests/tests_ElementsPage/test_ElementsPage.py"}}}, "date": "March 19, 2022", "start_time": 1647721560.4177642, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}